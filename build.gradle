buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
    }
    ext {
        springBootVersion = '1.5.10.RELEASE'
        swaggerVersion = '2.8.0'
        okHttpVersion = '2.7.5'
        datastaxDriverVersion = '3.4.0'
    }
}

plugins {
    id "java"
    id "jacoco"
    id "org.springframework.boot" version '1.5.10.RELEASE'
    id "org.owasp.dependencycheck" version '2.1.0'
}

jar {
    baseName = 'transactions-service'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile('org.projectlombok:lombok:1.16.8')
    compile("com.datastax.cassandra:cassandra-driver-core:$datastaxDriverVersion")
    compile("com.datastax.cassandra:cassandra-driver-mapping:$datastaxDriverVersion")
    compile("com.datastax.cassandra:cassandra-driver-extras:$datastaxDriverVersion")
    compile("com.squareup.okhttp:okhttp:${okHttpVersion}")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    compile('info.archinnov:achilles-junit:5.1.5')
    compile('org.javamoney:moneta:1.1')
    compile('org.zalando:jackson-datatype-money:1.0.0')
    compile('org.springframework.hateoas:spring-hateoas:0.24.0.RELEASE')
    compile("io.springfox:springfox-swagger-ui:$swaggerVersion") {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compile("io.springfox:springfox-swagger2:$swaggerVersion") {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compileOnly("org.springframework.boot:spring-boot-autoconfigure:$springBootVersion")

    testCompile("com.jayway.jsonpath:json-path:2.2.0")
    testCompile('org.skyscreamer:jsonassert:1.3.0')
    testCompile("com.squareup.okhttp:mockwebserver:${okHttpVersion}")
    testCompile('org.assertj:assertj-core:3.5.2')
    testCompile('org.awaitility:awaitility:3.0.0')
    testCompile("org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")
    testCompile 'io.netty:netty-transport-native-epoll:4.1.19.Final'
    testCompile 'io.netty:netty-all:4.1.19.Final'
    testCompile('com.google.guava:guava:19.0')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}

jacocoTestReport {
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco/html"
    }
    executionData = files('build/jacoco/test.exec')
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

dependencyCheck {
    format = 'ALL'
    suppressionFile = "./owasp/owasp-suppression.xml"
}

test {
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
        exceptionFormat "full"
    }
}
